{% macro createGroup(group, count) -%}
  <div class="group col-lg-4 col-md-6 col-sm-6 col-xs-12">
    <h2>{{ group.name }}</h2>
    {% for act in group.activities %}
      <div class="button col-lg-6 col-md-5 col-sm-6 col-xs-6">
        <button type="button" class="btn btn-default btn-block btn-lg" onclick="sendActivity({{ count[0] }});">{{ act.name }}</button>
      </div>
      {% if count.append(count.pop() + 1) %}{% endif %}
    {% endfor %}
  </div>
{%- endmacro %}


{# controllable groups are found on the first page, configurable ones are found in the scheduling modal #}
{% macro createTradfri(groups, suggested_colors, controllable) -%}
  {% for group in groups %}
  <div class="subgroup tradfri-container col-lg-6 col-md-5 col-sm-6 col-xs-6" group-id={{ group.id }}>
    <div class="tradfri-inner-container">
      <div class="name-container">
        {% if not controllable %}
          <input class="group-active" identifier="{{ group.id }}" type="checkbox" autocomplete="off">
        {% endif %}
        <span class="name">{{ group.name }}</span>
        <span class="light-state glyphicon glyphicon-off {{ 'on' if group.state and controllable else 'off' }}"></span>

        {% if not controllable %}
          <input class="hidden" type="checkbox" key="light-state">
        {% endif %}
      </div>
      <div class="dimmer-container">
        <input class="slider" key="dimmer" type="range" style="background: linear-gradient(90deg, {{ group.color }}10 0%, {{ group.color }}80 100%);" min="0" max="255" value="{{ group.dimmer if controllable else '0' }}">
      </div>
      {% if controllable %}
        <div class="hex-container">
      {% else %}
        <div class="hex-container radio-group" radio-action-selectors=".tradfri-container[group-id='{{ group.id }}'] .hex-suggestion" radio-action="checked">
      {% endif %}
        {{ tradfriColorSuggestion(controllable, suggested_colors[0]) }}
        {{ tradfriColorSuggestion(controllable, suggested_colors[1]) }}
        {{ tradfriColorSuggestion(controllable, suggested_colors[2]) }}
      </div>
    </div>
  </div>
  {% endfor %}
{%- endmacro %}


{% macro tradfriColorSuggestion(controllable, color) -%}
  {% set common = "class='hex-suggestion' value=" + color + " style='background-color: #" + color + "'" %}
  {% if controllable %}
    <button {{ common }}></button>
  {% else %}
    <div>
      <input key='color' name='color' type='radio' {{ common }}></input>
      <span class="checkmark">
        <div class="checkmark-inner">
          <div class="checkmark-circle"></div>
          <div class="checkmark-stem"></div>
          <div class="checkmark-kick"></div>
        </div>
      </span>
    </div>
  {% endif %}
{%- endmacro %}


{% macro createBlock(event, now) -%}
  <div class="block btn-lg" identifier="{{ event['id'] }}">
    {# ID #}
    <span name="event-id">{{ event.id }}</span>

    {# Time #}
    <div class="clock">
      <span class="glyphicon glyphicon-time"></span>
      <span name="event-time">{{ event.time }}</span>
    </div>

    {# Days #}
    {% if "days" not in event or event.days|length == 7 %}
      <span name="event-days">all days</span>
    {% elif event.days|length > 1 %}
      <span name="event-days">{{ event.days|length }} days</span>
    {% else %}
      <span name="event-days">{{ event.days|length }} day</span>
    {% endif %}

    {# Commands #}
    {% if event.commands|length > 1 %}
      <span name="event-commands">{{ event.commands|length }} commands</span>
    {% else %}
      <span name="event-commands">{{ event.commands|length }} command</span>
    {% endif %}

    {# Enable and edit #}
    <div class="controls">
      {% if ("disabled" in event and event["disabled"]) or
            ("disabledUntil" in event and event["disabledUntil"] + "T" + event.time >= now()) %}
        <input name="event-enabled" type="checkbox" autocomplete="off" class="uiswitch">
      {% else %}
        <input name="event-enabled" type="checkbox" autocomplete="off" class="uiswitch" checked>
      {% endif %}
      <span name="edit-event" class="glyphicon glyphicon-cog"></span>
    </div>
  </div>
{%- endmacro %}
